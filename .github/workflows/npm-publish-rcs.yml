name: Publish Release Candidate

on:
  pull_request:
    branches: [main]
    types: [synchronize, ready_for_review]

jobs:
  deploy-rc-from-release:
    runs-on: ubuntu-latest
    if: contains(github.ref_name, 'release')
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
      - name: Create branch for rc deploy
        run: |
          PACKAGE_VERSION="$(cut -c 10- <<<'${{github.ref_name}}')"
          git fetch --unshallow
          git checkout -b "rc-${PACKAGE_VERSION}"
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDHHmmss
          utcOffset: '+00:00'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - run: |
          PACKAGE_VERSION="$(cut -c 10- <<<'${{github.ref_name}}')"
          npm version "${PACKAGE_VERSION}-rc.${{ steps.current-time.outputs.formattedTime }}"
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  deploy-rc-from-hotfix:
    runs-on: ubuntu-latest
    if: contains(github.ref_name, 'hotfix')
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
      - name: Create branch for rc deploy
        run: |
          PACKAGE_VERSION="$(cut -c 9- <<<'${{github.ref_name}}')"
          git fetch --unshallow
          git checkout -b "rc-${PACKAGE_VERSION}"
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDHHmmss
          utcOffset: '+00:00'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - run: |
          PACKAGE_VERSION="$(cut -c 9- <<<'${{github.ref_name}}')"
          npm version "${PACKAGE_VERSION}-rc.${{ steps.current-time.outputs.formattedTime }}"
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
